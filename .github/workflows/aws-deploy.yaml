name: aws-deploy

on:
  pull_request:
    branches: '*'
  push:
    branches: [main]

jobs:
  pre-commit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
      - uses: pre-commit/action@v2.0.0
  org-formation:
    if: github.event_name == 'push'
    needs: pre-commit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Assume AWS Role
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.CI_SERVICE_USER_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.CI_SERVICE_USER_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
          role-to-assume: arn:aws:iam::531805629419:role/bootstrap-ci-service-access-CiServiceRole-VVXK9EUQNPUZ
          role-duration-seconds: 1200
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 15.x
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install dependencies
        run: npm install
      - name: Deploy with org-formation
        run: |
          cd org-formation
          npx org-formation perform-tasks --verbose --print-stack --perform-cleanup organization-tasks.yaml
  sceptre-sandbox:
    if: github.event_name == 'push'
    needs: org-formation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - name: Cache python modules
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install sceptre sceptre-ssm-resolver
      - name: Assume AWS Role
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.CI_SERVICE_USER_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.CI_SERVICE_USER_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
          role-to-assume: arn:aws:iam::563295687221:role/OrganizationFormationBuildAccessRole
          role-duration-seconds: 1200
      - name: Deploy with sceptre
        run: |
          cd sceptre/sandbox
          sceptre launch prod --yes
  sceptre-scicomp:
    if: github.event_name == 'push'
    needs: org-formation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - name: Cache python modules
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install sceptre sceptre-ssm-resolver
      - name: Assume AWS Role
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.CI_SERVICE_USER_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.CI_SERVICE_USER_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
          role-to-assume: arn:aws:iam::055273631518:role/OrganizationFormationBuildAccessRole
          role-duration-seconds: 1200
      - name: Deploy with sceptre
        run: |
          cd sceptre/scicomp
          sceptre launch prod --yes
